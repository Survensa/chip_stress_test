## Sample Config file
general_configs:
  platform_execution: "rpi" #use 'rpi' option for using raspberrypi as DUT, for any other option used like 'nordic' or 'CustomDUT' same name will appear in log viewer UI and 'deviceModules' option from config will be read/used
  number_of_iterations: 10
  continue_excution_on_fail: True # accept only boolean values, when set to True the script will not stop if the iteration fails
  analytics_parameters:
    current_heap_used :
      attribute: SoftwareDiagnostics.Attributes.CurrentHeapUsed
      end_point: 0
    reboot_count :
      attribute: GeneralDiagnostics.Attributes.RebootCount
      end_point: 0

dut_config:
  rpi: # these parameters are used to take ssh session to a remote host and start DUT application on a raspberrypi
    module: matter_qa.library.platform.raspberrypi #Python file which will inherit the BaseDUTNode class and define the behaviour of the DUT Working
    rpi_hostname: "192.168.8.101"
    rpi_username: "ubuntu"
    rpi_password: "raspberrypi"
    app_config: # these parameters are used to start the DUT application os user's choice, provide full app path and the arguments
      matter_app: "/home/ubuntu/matter_cntrl/connectedhomeip/examples/all-clusters-app/linux/out/all-clusters-app/chip-all-clusters-app --discriminator 3790 --passcode 20202021"

  nordic:
    module: matter_qa.library.platform.nordic #Python file which will inherit the BaseDUTNode class and define the behaviour of the DUT Working
    serial_port: "/dev/ttyACM1"
    serial_baudrate: 115200
    serial_timeout: 60
    command: "matter device factoryreset\n"

test_case_config:
  TC_Pair:
    number_of_iterations: 10
    retry_count: 3
